package main.formes;
import java.awt.Point;

import main.formes.util.AnalyseurTrame;
import main.formes.Formes;


public class ReplacerForme extends ListeFormes {
	

	private Forme forme;
	private int x1, y1, x2, y2, centreX, centreY, rayonH, rayonV, rayon, numeroSequence;
	private Point coinSupGauche;
	private String trame;
	private int num;


	public Forme replacerForme(Forme forme){
		
		for(int i=0; i<=length();i++){
			forme=getForme(i);
			if(forme==null)
				null;
			
		}
				
				
		

		
		
		
		if (typeForme.equals("CARRE") || typeForme.equals("RECTANGLE")){
			return new Rectangle(analyseur.getX1(), analyseur.getY1(),
					analyseur.getX2(), analyseur.getY2(), analyseur.getNumeroSequence());

		
		if(formeInit == Formes.RECTANGLE){
			setX1(x1);
			setY1(y1);
			
			coinSupGauche.setLocation(x1, y1);
			
		}	
		
		else if(formeInit == Formes.OVALE){
			centreX = getCentreX() - getRayonH();
			centreY = getCentreY() - getRayonV();
		}
		
		else if(forme==Formes.CERCLE){
			centreX = getCentreX()- getRayon();
			centreY = getCentreY()- getRayon();
		}
		
		return formeReplacee;
	}
		
		
		public void setX1(int x1){
			if(1<=getNumeroSequence() && getNumeroSequence()<=10)
				x1 = 40 * (getNumeroSequence()-1);
			else if(11<=getNumeroSequence() && getNumeroSequence()<=20)
				x1 = 40 * (getNumeroSequence() - 11);
			else if(21<=getNumeroSequence() && getNumeroSequence()<30)
				x1 = 40 * (getNumeroSequence() - 21);
			else if(31<=getNumeroSequence() && getNumeroSequence()<40)
				x1 = 40 * (getNumeroSequence() - 31);
			this.x1 = x1;
		}
		
		public void setY1(int y1){
			if(1<=getNumeroSequence() && getNumeroSequence()<=10)
				y1 = 40 * (getNumeroSequence()-1);
			else if(11<=getNumeroSequence() && getNumeroSequence()<=20)
				y1 = 40 * (getNumeroSequence() - 11);
			else if(21<=getNumeroSequence() && getNumeroSequence()<30)
				y1 = 40 * (getNumeroSequence() - 21);
			else if(31<=getNumeroSequence() && getNumeroSequence()<40)
				y1 = 40 * (getNumeroSequence() - 31);
			this.y1=y1;
		}
	
}
