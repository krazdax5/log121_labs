package main.formes;
import java.awt.Point;

import main.formes.util.AnalyseurTrame;
import main.formes.Rectangle;


/**
 * Classe qui permet de repositionner les formes au bon endroit dans la fenetre
 * @author Pierre-Luc Landry
 * 2013/10/16 Version Initiale
 *
 */
public class ReplacerForme {
	

	private int x1, y1, x2, y2, centreX, centreY, rayonH, rayonV, rayon, numeroSequence;
	final int DISTANCE = 40;
	
	/**
	 * Constructeur qui permet de changer les coordonnees de la forme
	 * On change toutes les formes precentes dans la liste  a l'aide d'une boucle
	 * @param liste liste chainee dont les formes ne sont pas encore dans l'ordre d'affichage desiree
	 * @return liste on retourne la liste chainee dont les formes on maintenant des nouvelles coordonnees
	 */
	public ListeFormes replacerForme(ListeFormes liste){
		
		try{
			liste.premiere();
			for(int i=0; i<=liste.length();++){
				Forme forme = liste.getForme(i);
				
				if(forme.getType()==Formes.CARRE)
					setCoordCarre(forme,DISTANCE*i, DISTANCE*i);
				
				else if(forme.getType()==Formes.RECTANGLE)
					setCoordCarre(forme,DISTANCE*i,DISTANCE*i);
				
				else if(forme.getType()==Formes.CERCLE)
					setCoordCercle(forme,DISTANCE*i, DISTANCE*i);
				
				else if(forme.getType()==Formes.OVALE)
					setCoordCercle(forme, DISTANCE*i, DISTANCE*i);
				
				else if(forme.getType()==Formes.LIGNE)
					setCoordLigne(forme,DISTANCE*i,DISTANCE*i);
					
			}
		}catch(Exception e){
			System.out.print("null");
		}
		return liste;
	}
	
	private void setCoordLigne(Forme forme, int x, int y) {
		x=forme.getPremiereCoordonnee().x;
		y=forme.getPremiereCoordonnee().y;
	}

	private void setCoordCercle(Forme forme, int x, int y) {
		x=forme.getCoordonneeCentre().x;
		y=forme.getCoordonneeCentre().y;
	}

	private void setCoordCarre(Forme forme, int x, int y) {	
		x=forme.getPremiereCoordonnee().x;
		y=forme.getPremiereCoordonnee().y;
	}
		
	
	
}
